<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.yjyy.dao.ClassRoomMapper">
  <resultMap id="BaseResultMap" type="com.example.yjyy.entity.ClassRoom">
    <constructor>
      <idArg column="CLASSROOMID" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="CLASSROOMNAME" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="VENUEID" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="STUDENTNUMBER" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="CREATEUSER" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="CREATEDATE" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="MODIFYUSER" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="MODIFYDATE" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="FLAG" javaType="java.lang.String" jdbcType="CHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    CLASSROOMID, CLASSROOMNAME, VENUEID, STUDENTNUMBER, CREATEUSER, CREATEDATE, MODIFYUSER, 
    MODIFYDATE, FLAG
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from yj_classroom
    where CLASSROOMID = #{classroomid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from yj_classroom
    where CLASSROOMID = #{classroomid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.yjyy.entity.ClassRoom">
    insert into yj_classroom (CLASSROOMID, CLASSROOMNAME, VENUEID, 
      STUDENTNUMBER, CREATEUSER, CREATEDATE, 
      MODIFYUSER, MODIFYDATE, FLAG
      )
    values (#{classroomid,jdbcType=VARCHAR}, #{classroomname,jdbcType=VARCHAR}, #{venueid,jdbcType=VARCHAR}, 
      #{studentnumber,jdbcType=INTEGER}, #{createuser,jdbcType=VARCHAR}, #{createdate,jdbcType=TIMESTAMP}, 
      #{modifyuser,jdbcType=VARCHAR}, #{modifydate,jdbcType=TIMESTAMP}, #{flag,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.yjyy.entity.ClassRoom">
    insert into yj_classroom
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="classroomid != null">
        CLASSROOMID,
      </if>
      <if test="classroomname != null">
        CLASSROOMNAME,
      </if>
      <if test="venueid != null">
        VENUEID,
      </if>
      <if test="studentnumber != null">
        STUDENTNUMBER,
      </if>
      <if test="createuser != null">
        CREATEUSER,
      </if>
      <if test="createdate != null">
        CREATEDATE,
      </if>
      <if test="modifyuser != null">
        MODIFYUSER,
      </if>
      <if test="modifydate != null">
        MODIFYDATE,
      </if>
      <if test="flag != null">
        FLAG,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="classroomid != null">
        #{classroomid,jdbcType=VARCHAR},
      </if>
      <if test="classroomname != null">
        #{classroomname,jdbcType=VARCHAR},
      </if>
      <if test="venueid != null">
        #{venueid,jdbcType=VARCHAR},
      </if>
      <if test="studentnumber != null">
        #{studentnumber,jdbcType=INTEGER},
      </if>
      <if test="createuser != null">
        #{createuser,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null">
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyuser != null">
        #{modifyuser,jdbcType=VARCHAR},
      </if>
      <if test="modifydate != null">
        #{modifydate,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.yjyy.entity.ClassRoom">
    update yj_classroom
    <set>
      <if test="classroomname != null">
        CLASSROOMNAME = #{classroomname,jdbcType=VARCHAR},
      </if>
      <if test="venueid != null">
        VENUEID = #{venueid,jdbcType=VARCHAR},
      </if>
      <if test="studentnumber != null">
        STUDENTNUMBER = #{studentnumber,jdbcType=INTEGER},
      </if>
      <if test="createuser != null">
        CREATEUSER = #{createuser,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null">
        CREATEDATE = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyuser != null">
        MODIFYUSER = #{modifyuser,jdbcType=VARCHAR},
      </if>
      <if test="modifydate != null">
        MODIFYDATE = #{modifydate,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        FLAG = #{flag,jdbcType=CHAR},
      </if>
    </set>
    where CLASSROOMID = #{classroomid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.yjyy.entity.ClassRoom">
    update yj_classroom
    set CLASSROOMNAME = #{classroomname,jdbcType=VARCHAR},
      VENUEID = #{venueid,jdbcType=VARCHAR},
      STUDENTNUMBER = #{studentnumber,jdbcType=INTEGER},
      CREATEUSER = #{createuser,jdbcType=VARCHAR},
      CREATEDATE = #{createdate,jdbcType=TIMESTAMP},
      MODIFYUSER = #{modifyuser,jdbcType=VARCHAR},
      MODIFYDATE = #{modifydate,jdbcType=TIMESTAMP},
      FLAG = #{flag,jdbcType=CHAR}
    where CLASSROOMID = #{classroomid,jdbcType=VARCHAR}
  </update>

  <select id="getClassRoomList" parameterType="String" resultType="com.example.yjyy.result.business.PageResult.ClassRoomPageResult">
    select A.*, count(1) over() as CNT, ceil(count(1) over()/#{pagesize}) as PAGE from(
    select cr.classroomid,cr.classroomname,v.venuename,cr.studentnumber studentnum,u1.username
    createuser,cr.createdate,u2.username modifyuser,cr.modifydate
    from yj_classroom cr
    left join yj_venue v on v.venueid = cr.venueid and v.flag = '0'
    left join sys_user u1 on u1.userid = cr.createuser and u1.flag = '0'
    left join sys_user u2 on u2.userid = cr.modifyuser and u2.flag = '0'
    where cr.flag = '0'
    <if test="venueid != null and venueid != ''">
      and cr.venueid = #{venueid}
    </if>
    <if test="classroomname != null and classroomname != ''">
      and cr.classroomname like concat('%',#{classroomname},'%')
    </if>
    order by cr.createdate desc
    )A
    limit #{begin},#{end}
  </select>
</mapper>